name: ci-doctors-portal-api

on:
  pull_request:
    types: [opened, reopened, edited, synchronize]
    paths:
      - "doctors-portal/src/API/**"
      - ".github/workflows/ci-doctors-portal-api.yml"

env:
  working-directory: ./
  solution-folder: /doctors-portal/src/API/  
  IMAGE_NAME: doctors-portal-api
  BUILD_ID: ${{ github.server_url }}!${{ github.repository }}!${{ github.ref_name }}!${{ github.sha }}!${{ github.run_number }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: rlespinasse/git-commit-data-action@v1.x
      - name: Extract Branch Name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Setup .NET 
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.x"
      - name: Install dependencies
        run: dotnet restore
        working-directory: ${{env.working-directory}}${{env.solution-folder}}

      - name: Install coverlet for code coverage
        run: dotnet tool install -g coverlet.console --version 1.7.2
        working-directory: ${{env.working-directory}}${{env.solution-folder}}

      - name: Build
        run: dotnet build --configuration Release --no-restore
        working-directory: ${{env.working-directory}}${{env.solution-folder}}

      - name: Test
        run: |          
          dotnet test -c Release --no-restore --verbosity normal --collect:"XPlat Code Coverage" --settings coverlet.runsettings           
        working-directory: ${{env.working-directory}}${{env.solution-folder}}
      - name: Codecov
        uses: codecov/codecov-action@v2
        with:
          # User defined upload name. Visible in Codecov UI
          name: DMF-MEDICAL-PORTAL-API
          # Repository upload token - get it from codecov.io. Required only for private repositories
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ${{env.working-directory}}${{env.solution-folder}}
          # Flag upload to group coverage metrics (e.g. unittests | integration | ui,chrome)
          flags: unittests
          # Environment variables to tag the upload with (e.g. PYTHON | OS,PYTHON)
          # env_vars: C#
          # Specify whether or not CI build should fail if Codecov runs into an error during upload
          fail_ci_if_error: false

      - name: Build image
        run: |
          echo BUILD_ID=$BUILD_ID
          docker build --build-arg BUILD_ID="$BUILD_ID" . --file ./doctors-portal/src/API/Dockerfile --tag $IMAGE_NAME
