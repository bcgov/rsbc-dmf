name: ci-medical-portal-ui

on:
  push:
     branches: [main] #codecov uses default branch for dashboard stat. recommended change the default branch from main to dev
  pull_request:
    types: [opened, reopened, edited, synchronize]
    paths:
      - "medical-portal/src/UI/**"
      - ".github/workflows/ci-medical-portal-ui.yml"

env:
  IMAGE_NAME: medical-portal-ui
  working-directory: ./
  solution-folder: medical-portal/src/UI/medical-portal
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: rlespinasse/git-commit-data-action@v1.x
      - name: Extract Branch Name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: npm ci
        working-directory: ${{env.working-directory}}${{env.solution-folder}}

      - run: npm run lint
        working-directory: ${{env.working-directory}}${{env.solution-folder}}

      - run: npm run build --if-present
        working-directory: ${{env.working-directory}}${{env.solution-folder}}
      - name: Test
        run: |          
          npm install
          npm test --codeCoverage=true --watch=false
        working-directory: ${{env.working-directory}}${{env.solution-folder}}
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2.1.0
        with:
<<<<<<< HEAD
          name: DMFT
          token: ${{ secrets.CODECOV_TOKEN }}
          # Flag upload to group coverage metrics (e.g. unittests | integration | ui,chrome)
          flags: unittests
          # Environment variables to tag the upload with (e.g. PYTHON | OS,PYTHON)
          env_vars: javascript
=======
            name: DMFT
            token: ${{ secrets.CODECOV_TOKEN }}
>>>>>>> fa5c8479b58986477a712bb5ca718bc45cf23f0a

      - name: Build image
        working-directory: ./medical-portal/src/UI
        run: docker build . --file Dockerfile --tag $IMAGE_NAME
